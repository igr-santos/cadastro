name: Tests, Static Analysis and Deploy

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - "**"

  push:
    tags:
      - v*

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip" # caching pip dependencies

      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version

      - name: Install dev requirements
        run: pip install -r requirements-dev.txt

      - name: Install prod requirements
        run: pip install -r requirements.txt

      - name: Lint
        run: |
          pylint --load-plugins pylint_django --django-settings-module=project.settings --rcfile=.pylintrc --errors-only $(git ls-files '*.py')

      - name: Test
        run: python manage.py test --exclude-tag=skip

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    strategy:
      matrix:
        node-version: [18.x]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: theme/package-lock.json

      - name: Install dependencies
        run: cd theme && npm ci

      - name: Process CSS
        run: cd theme && npm start

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip" # caching pip dependencies

      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version

      - name: Install prod requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create env file
        run: |
          cat << EOF > .env
          MSR_HOST=localhost:8000
          VOLUNTEER_HOST=127.0.0.1:8000
          BONDE_DATABASE_URL=postgresql://user:password@localhost:5432/postgres
          DATABASE_URL=postgresql://user:password@localhost:5432/postgres
          GEOCODING_API_KEY=${{ secrets.GEOCODING_API_KEY }}
          GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}
          MOODLE_API_URL=${{ secrets.MOODLE_API_URL }}
          MOODLE_API_KEY=${{ secrets.MOODLE_API_KEY }}
          MOODLE_DATABASE_URL=${{ secrets.MOODLE_DATABASE_URL }}
          EOF

      - name: Install prod requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Apply migrations
        run: python manage.py migrate

      - name: Run server
        run: |
          python manage.py runserver &
          curl http://127.0.0.1:8000/admin/

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          wait-on: 'npx wait-on --timeout 5000 http://127.0.0.1:8000'
          working-directory: e2e
      
      - name: Save Cypress screenshots
        uses: actions/upload-artifact@v4
        # add the line below to store screenshots only on failures
        # if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`

      - name: Save Cypress videos
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`

