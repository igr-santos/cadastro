# Generated by Django 4.2.1 on 2023-10-19 14:09

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("volunteers", "0011_integrationlogs_integration_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Volunteer",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(default=datetime.datetime.now)),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated_date"),
                ),
                (
                    "volunteer_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cadastrada", "cadastrada"),
                            ("reprovada_diretrizes", "reprovada_diretrizes"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=200, verbose_name="Primeiro nome"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=200, verbose_name="Sobrenome"),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                (
                    "phone",
                    models.CharField(
                        max_length=11, verbose_name="Telefone de atendimento"
                    ),
                ),
                ("whatsapp", models.CharField(max_length=11, verbose_name="Whatsapp")),
                ("zipcode", models.CharField(max_length=9, verbose_name="CEP")),
                ("state", models.CharField(max_length=2, verbose_name="Estado")),
                ("city", models.CharField(max_length=100, verbose_name="Cidade")),
                (
                    "neighborhood",
                    models.CharField(max_length=100, verbose_name="Bairro"),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=4, max_digits=10, verbose_name="Latitude"
                    ),
                ),
                (
                    "logintude",
                    models.DecimalField(
                        decimal_places=4, max_digits=10, verbose_name="Longitude"
                    ),
                ),
                (
                    "register_number",
                    models.CharField(max_length=11, verbose_name="Numero de registro"),
                ),
                ("birth_date", models.DateTimeField(verbose_name="Data de nascimento")),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Identidade de gênero"),
                            ("Mulher cisgênero", "Mulher cisgênero"),
                            (
                                "Mulher transgênero/travesti",
                                "Mulher transgênero/travesti",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Cor"),
                            ("Preta", "Preta"),
                            ("Parda", "Parda"),
                            ("Indígena", "Indígena"),
                            ("Amarela", "Amarela"),
                            ("Branca", "Branca"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "modality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Modalidade de atendimento"),
                            ("Presencial", "Presencial"),
                            ("Online", "Online"),
                            (
                                "Deixo à escolha da acolhida",
                                "Deixo à escolha da acolhida",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "fields_of_work",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Violência de Gênero", "Violência de Gênero"),
                            ("Família", "Família"),
                            ("Penal", "\tPenal"),
                            ("Trabalhista", "Trabalhista"),
                            ("Cível", "Cível"),
                            ("Administrativo", "Administrativo"),
                            ("Empresarial", "Empresarial"),
                            ("Tributário", "Tributário"),
                            ("Digital", "\tDigital"),
                            ("Ambiental\t", "Ambiental"),
                            (
                                "Violência contra as mulheres",
                                "Violência contra as mulheres",
                            ),
                            ("Assistência social", "Assistência social"),
                            ("Saúde mental", "Saúde mental"),
                            ("Psicologia clínica", "Psicologia clínica"),
                            ("Psicologia jurídica", "Psicologia jurídica"),
                            ("Psicologia social", "Psicologia social"),
                            (
                                "Terapia sistêmica/familiar",
                                "Terapia sistêmica/familiar",
                            ),
                            ("Serviços públicos", "Serviços públicos"),
                            ("Sócio-Histórica", "Sócio-Histórica"),
                            ("Não tenho experiência", "Não tenho experiência"),
                            ("Outros", "Outros"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "years_of_experience",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Não tenho experiência ", "Não tenho experiência"),
                            ("Menos 6 meses", "Menos 6 meses"),
                            ("Menos de 1 ano", "Menos de 1 ano"),
                            ("Menos de 2 anos", "Menos de 2 anos"),
                            ("Menos de 5 anos", "Menos de 5 anos"),
                            ("Menos de 10 anos", "Menos de 10 anos"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "aviability",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "Vagas para atendimento"),
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5+"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "approach",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Psicologia Analítica de Jung ou Análise Junguiana",
                                "Psicologia Analítica de Jung ou Análise Junguiana",
                            ),
                            ("Psicanálise", "Psicanálise"),
                            (
                                "Behaviorismo ou Analítico Comportamental",
                                "Behaviorismo ou Analítico Comportamental",
                            ),
                            ("Humanismo", "Humanismo"),
                            ("Psicoterapia Corporal", "Psicoterapia Corporal"),
                            (
                                "Cognitivo-Comportamental ou TCC",
                                "Cognitivo-Comportamental ou TCC",
                            ),
                            ("Gestalt-terapia", "Gestalt-terapia"),
                            (
                                "Abordagem Centrada na Pessoa (ACP)",
                                "Abordagem Centrada na Pessoa (ACP)",
                            ),
                            ("Outros", "Outros"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "form_data",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="volunteers.formdata",
                    ),
                ),
            ],
        ),
    ]
